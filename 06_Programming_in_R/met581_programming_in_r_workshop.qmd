---
title: "Programming in R Workshop"
author: "Dr. Sumukh Deshpande"
date: "20 October 2020"
format:
  html:
    theme: united
    toc: true
    toc_float: yes
    code-fold: show
    code-link: true
  pdf:
    toc: true
execute: 
  echo: true
---

## Load packages

Load `purrr`, `tidyverse` and `dplyr` packages.

```{r}
#| label: cars
#| results: hide
#| message: false
#| warning: false
library(purrr)
library(tidyverse)
library(conflicted)
library(dplyr)
```

Load the Eukaryotes dataset - only have to run this once to get the data

```{r}
#| eval: false
eukaryotes <- read_tsv(
  file = "ftp://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/eukaryotes.txt", 
  na = c("", "na", "-")
)

# Reformat dataset headers
names_new <- names(eukaryotes) |> 
  str_replace_all("[#%()]", "") |> 
  str_replace_all("[ /]", "_") |>
  str_to_lower()

eukaryotes <- eukaryotes |> 
  set_names(names_new)

# Save tibble
write_tsv(eukaryotes, "eukaryotes.tsv")
```

Load the saved dataset

```{r}
eukaryotes <- read_tsv("https://raw.githubusercontent.com/swuyts/purrr_tutorial/master/data/eukaryotes.tsv")
```

How many different organisms are there in our dataset?

```{r}
# Put your answer here
```

Subset dataframe by selecting variables for the analysis:

```{r}
```

Using `n_distinct` to each variable of eukaryotes_subset

```{r}
```

## Nested Tibbles

Split the eukaryotes dataset according to groups defined in the group variable:

```{r}
```

Split the "eukaryotes_nested" into 5 smaller dataframes.

```{r}
```

## Combine nested tibbles and map

Count number of rows for each sub data frames

```{r}
```

Create a new column using `mutate()`

```{r}
```

How many different organisms are there per group ? 

There are two different ways:

```{r}
```

Apply the function to our nested data:

```{r}
```

We can define the functions on the fly:

```{r}
```

## pmap and walk2 functions

This about the following example for `pmap`, what will it do?:

```{r}
df <- data.frame(
  x = c("ATTTTACTGGGAGGGAA", "TATTTTTTAAAGGGCCC", "GCGCGCCCCAAATTATAGGC", "TGCCACATTTTATCCGCGCA"),
  pattern = c("A", "T", "G", "C"),
  replacement = c("a", "t", "g", "c"),
  stringsAsFactors = FALSE
  )

pmap(df, gsub)
```

Example for `walk2`:

```{r}
df1 <- data.frame(
  index = c(1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10),
  value = c(40,20,10,5,50,80,30,20,80,90,33,21,56,66,43,89,66,80,30,10),
  category = c("A","A","A","A","A","A","A","A","A","A","B","B","B","B","B","B","B","B","B","B")
)

df1 %>%
  split(.$category) %>%
  .[order(names(.))] %>%
  walk2(paste('Plot', names(.)), 
        ~plot(value ~ index, data = .x, type = "l", main = .y))

```